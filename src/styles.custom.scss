@import '~@angular/material/theming';


// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define a custom typography config that overrides the font-family as well as the
// `headlines` and `body-1` levels.
@font-face {
  font-family: 'IranSansWeb';
  src: url("assets/fonts/iransansweb.ttf");
}
$custom-typography: mat-typography-config(
  $font-family: 'Roboto, IranSansWeb, tahoma, monospace',
  $headline: mat-typography-level(32px, 48px, 700),
  $body-1: mat-typography-level(14px, 24px, 500)
);

// Override typography CSS classes (e.g., mat-h1, mat-display-1, mat-typography, etc.).
@include mat-base-typography($custom-typography);

// Override typography for all Angular Material, including mat-base-typography and all components.
@include angular-material-typography($custom-typography);

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$candy-app-primary: mat-palette($mat-blue-gray);
$candy-app-accent:  mat-palette($mat-orange, A200, A100, A400);

// The warn palette is optional (defaults to red).
$candy-app-warn:    mat-palette($mat-indigo);

// Create the theme object (a Sass map containing all of the palettes).
// $candy-app-theme: mat-dark-theme($candy-app-primary, $candy-app-accent, $candy-app-warn);
$candy-app-theme: mat-light-theme($candy-app-primary, $candy-app-accent, $candy-app-warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($candy-app-theme);
